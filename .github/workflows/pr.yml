name: Pull Request
on:
  - pull_request
  - pull_request_target
jobs:
  test_coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    # Only needs to run on head branch since that will become the new base
    # and coverage needs to pass before merging
    if: ${{ github.event_name == 'pull_request' }}
    continue-on-error: true
    strategy:
      matrix:
        node-version:
          - 20.x
        include:
          - branch: main
            artifact: main
          - branch: ${{ github.head_ref }}
            artifact: pull-request
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Run tsc
        run: npm run prestart

      - name: Run test coverage
        run: npm run test:coverage

      - name: "Upload Coverage"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.artifact }}
          path: src/coverage
  report_coverage:
    name: Report PR coverage
    runs-on: ubuntu-latest
    needs: test_coverage
    if: always() && github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Download Coverage Artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-pull-request
          path: src/coverage

      - uses: actions/download-artifact@v4
        with:
          name: coverage-main
          path: src/coverage-main

      - name: Report coverage
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          vite-config-path: vitest.config.ts
          json-summary-compare-path: coverage-main/coverage-summary.json
  labeler:
    name: Pull Request labeler
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request_target' }}
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/labeler@v5
      with:
        repo-token: '${{ secrets.GITHUB_TOKEN }}'
        sync-labels: true